{"version":3,"sources":["ui/1-main/1-header/Header.module.css","ui/1-main/3-listsContent/wishesList/1-AddListForm/AddListForm.module.css","ui/1-main/3-listsContent/wishesList/3-ListFooter/listFooter.module.css","ui/1-main/3-listsContent/ListsContainer.module.css","ui/1-main/3-listsContent/wishesList/listWrapper.module.css","ui/0-common/AddForm.jsx","ui/0-common/validateForm.js","api/0-configure-api.js","api/2-lists-api.js","bll/lists/ListsReducer.js","bll/lists/Lists-thunks.js","ui/1-main/1-header/addListsForm/AddListsFormContainer.jsx","api/1-auth-api.js","bll/auth/AuthReducer.js","bll/auth/Auth-thunks.js","ui/1-main/1-header/HeaderPage.jsx","ui/0-common/InputForm.jsx","ui/1-main/3-listsContent/wishesList/2-ListContent/Task.jsx","ui/1-main/3-listsContent/wishesList/1-AddListForm/AddListForm.jsx","ui/1-main/3-listsContent/wishesList/3-ListFooter/ListFooter.jsx","ui/1-main/3-listsContent/wishesList/0-ListHeader/ListHeader.jsx","ui/1-main/3-listsContent/wishesList/ListWrapper.jsx","ui/1-main/3-listsContent/ListsContainer.jsx","ui/1-main/2-log-in/LoginPage.jsx","ui/1-main/Main.jsx","bll/store.js","App.js","serviceWorker.js","index.js","ui/1-main/3-listsContent/wishesList/2-ListContent/Task.module.css","ui/1-main/2-log-in/Login.module.css"],"names":["module","exports","AddForm","itemName","item","onChangeItemName","addItem","props","value","placeholder","onChange","onPressEnter","style","width","marginRight","key","marginLeft","onClick","disabled","isLoading","validateItem","length","match","instance","axios","withCredentials","baseURL","headers","listsAPI","get","then","response","data","list","post","listId","delete","payload","put","items","task","taskId","SET_LISTS","SET_LISTS_LIMITATION","SET_LISTS_LOADING","SET_ERROR_MESSAGE","SET_TASKS","SET_LOADING_TASKS","ADD_LIST","DELETE_LIST","UPDATE_LIST","ADD_TASK","DELETE_TASK","UPDATE_TASK","initialState","lists","isListsLoading","errorMessage","listsReducer","state","action","type","isListsLimit","isLimitation","listsLoading","map","l","id","tasks","taskLoading","newList","filter","wl","newTask","w","setListsLimitation","setListsLoading","setErrorMessage","setTasks","setLoadingTasks","deleteListSuccess","updateListSuccess","addTaskSuccess","deleteTaskSuccess","updateTaskSuccess","updateTask","updatedTask","dispatch","a","async","resultCode","message","messages","console","log","AddListsFormContainer","useState","changeItemName","setError","useSelector","useDispatch","addFormCallbacks","title","e","currentTarget","margin","description","closable","onClose","showIcon","authAPI","email","password","rememberMe","captcha","securityAPI","SET_USER_DATA","SET_AUTHENTICATION","SET_LOADING","SET_ERROR","isAuth","loading","authReducer","authentication","captchaUrl","setLoading","setAuthUserData","userId","login","getAuthUserData","getCaptchaUrl","captchUrl","url","error","HeaderPage","config","extra","borderBottom","padding","background","subTitle","className","styles","avatar","size","icon","caption","button","InputForm","itemTitle","changeItemTitle","undo","onAddItem","inputContainer","color","autoFocus","Task","taskItem","isChangeModeShow","setChangeModeShow","taskTitle","changeTaskTitle","Option","useEffect","listContainer","check","checked","status","target","onChangeTaskCompleted","text","defaultValue","priority","onPriorityChange","placement","onConfirm","deleteTask","okText","cancelText","AddListForm","addTask","alertMessage","listHeader","ListFooter","filterValue","changeFilter","isHidden","hide","typeForAll","typeForCompleted","typeForActive","listFooter","code","ListHeader","isInputShow","setInputShow","onUpdateList","onDeleteList","listTitle","changeListTitle","titleWrap","ListWrapper","isListContentLoading","t","container","fontSize","header","footer","bordered","dataSource","renderItem","Item","ListsContainer","store","listsArr","content","listsWrap","LoginPage","handleSubmit","preventDefault","form","validateFields","err","values","this","getFieldDecorator","loginForm","onSubmit","formItem","rules","required","pattern","prefix","valuePropName","initialValue","htmlType","Component","WrappedNormalLoginForm","compose","create","name","connect","Main","Footer","auth","minHeight","marginTop","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","ThunkMiddleware","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df49482e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddForm\":\"Header_AddForm__3cTW7\",\"avatar\":\"Header_avatar__1WW2u\",\"caption\":\"Header_caption__1JfQx\",\"button\":\"Header_button__1fRCV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listHeader\":\"AddListForm_listHeader__1WQnY\",\"alertMessage\":\"AddListForm_alertMessage__1sbz9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listFooter\":\"listFooter_listFooter__21JFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listsWrap\":\"ListsContainer_listsWrap__1ZkoA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"listWrapper_container__3BYGn\",\"inputContainer\":\"listWrapper_inputContainer__2CFuH\",\"titleWrap\":\"listWrapper_titleWrap__342Zu\",\"title\":\"listWrapper_title__2CGJq\",\"icon\":\"listWrapper_icon__rXhzN\"};","import {Button, Input} from \"antd\"\r\nimport React from \"react\"\r\n\r\nconst AddForm = ({itemName, item, onChangeItemName, addItem, ...props}) => {\r\n\r\n    return (\r\n        <>\r\n            <Input value={itemName}\r\n                   placeholder={`Write ${item} name here`}\r\n                   onChange={onChangeItemName}\r\n                   onPressEnter={addItem}\r\n                   style={{width: '200px', marginRight: '20px'}}/>\r\n            <Button key=\"1\" style={{marginLeft: '8px'}} onClick={addItem} disabled={props.isLoading}>Add {item}</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddForm\r\n","export const validateItem = (itemName) => {\r\n    if (itemName.length < 1 || itemName.match(/^\\s+$/)) {\r\n        return 'Cannot be empty.'\r\n    }\r\n    if (itemName.length > 30) {\r\n        return 'Cannot be longer than 30 characters'\r\n    }\r\n    return null\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1',\r\n    headers: {\r\n        'API-KEY': '7dc52db3-0d14-44ab-80ee-40d908279e0f'\r\n    },\r\n});\r\n","import {instance} from './0-configure-api';\r\n\r\n\r\nexport const listsAPI = {\r\n    getLists() {\r\n        return instance.get('/todo-lists',).then(response => response.data) //array of lists ({id: 'asd', order: -1, title: 'title'})\r\n    },\r\n    addList(list) {\r\n        return instance.post('/todo-lists', {...list}).then(response => response.data.data.item)\r\n    },\r\n    deleteList(listId) {\r\n        return instance.delete('/todo-lists/' + listId).then(response => response.data)\r\n    },\r\n    updateTitleList(listId, payload) {\r\n        return instance.put(`/todo-lists/` + listId, {...payload}).then(response => response.data)\r\n    },\r\n    getTasks(listId) {\r\n        return instance.get(`/todo-lists/${listId}/tasks`).then(response => response.data.items)\r\n    },\r\n    addTask(listId, task) {\r\n        return instance.post(`/todo-lists/${listId}/tasks`, {...task}).then(response => response.data)\r\n    },\r\n    deleteTask(listId, taskId) {\r\n        return instance.delete(`/todo-lists/${listId}/tasks/${taskId}`).then(response => response.data)\r\n    },\r\n    updateTask(listId, taskId, payload) {\r\n        return instance.put(`/todo-lists/${listId}/tasks/${taskId}`, {...payload}).then(response => response.data)\r\n    },\r\n}\r\n","const SET_LISTS = 'ListsAPP/ListsReducer/SET_LISTS';\r\nconst SET_LISTS_LIMITATION = 'ListsAPP/ListsReducer/SET_LISTS_LIMITATION';\r\nconst SET_LISTS_LOADING = 'ListsAPP/ListsReducer/SET_LISTS_LOADING';\r\nconst SET_ERROR_MESSAGE = 'ListsAPP/ListsReducer/SET_ERROR_MESSAGE';\r\nconst SET_TASKS = 'ListsAPP/ListsReducer/SET_TASKS';\r\nconst SET_LOADING_TASKS = 'ListsAPP/ListsReducer/SET_LOADING_TASKS';\r\n\r\n\r\nconst ADD_LIST = 'ListsAPP/ListsReducer/ADD_LIST';\r\nconst DELETE_LIST = 'ListsAPP/ListsReducer/DELETE_LIST';\r\nconst UPDATE_LIST = 'ListsAPP/ListsReducer/UPDATE_LIST';\r\nconst ADD_TASK = 'ListsAPP/ListsReducer/ADD_TASK';\r\nconst DELETE_TASK = 'ListsAPP/ListsReducer/DELETE_TASK';\r\nconst UPDATE_TASK = 'ListsAPP/ListsReducer/UPDATE_TASK';\r\n\r\n\r\nlet initialState = {\r\n    lists: [\r\n        // {\r\n        //     name: 'ListTOP',\r\n        //     id: '98e8465e-894f-4491-905a-2111f823b728',\r\n        //     tasks: [\r\n        //         {\r\n        //             id: '515f5f49-0a8b-4fd3-a298-b96426c062cc',\r\n        //             title: 'ads',\r\n        //             description: null,\r\n        //             completed: false,\r\n        //             todoListId: '98e8465e-894f-4491-905a-2111f823b728',\r\n        //             order: 0,\r\n        //             status: 0,\r\n        //             priority: 1,\r\n        //             startDate: null,\r\n        //             deadline: null,\r\n        //             addedDate: '2019-12-11T18:20:58.023'\r\n        //         }\r\n        //     ]\r\n        // }\r\n    ],\r\n    isListsLoading: false,\r\n    errorMessage: '',\r\n}\r\n\r\nconst listsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LISTS:\r\n            return {\r\n                ...state,\r\n                lists: [...action.lists],\r\n            };\r\n            case SET_LISTS_LIMITATION:\r\n            return {\r\n                ...state,\r\n                isListsLimit: action.isLimitation,\r\n            };\r\n        case SET_LISTS_LOADING:\r\n            return {\r\n                ...state,\r\n                isListsLoading: action.listsLoading,\r\n            };\r\n        case SET_ERROR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.errorMessage,\r\n            };\r\n        case SET_TASKS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => {\r\n                    if (l.id === action.listId) {\r\n                        return {\r\n                            ...l, tasks: [...action.tasks]\r\n                        }\r\n                    } else {\r\n                        return l\r\n                    }\r\n                }),\r\n            };\r\n        case SET_LOADING_TASKS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => {\r\n                    if (l.id === action.listId) {\r\n                        return {\r\n                            ...l, taskLoading: action.taskLoading\r\n                        }\r\n                    } else {\r\n                        return l\r\n                    }\r\n                }),\r\n            };\r\n        case ADD_LIST:\r\n            return {\r\n                ...state,\r\n                lists: [action.newList, ...state.lists],\r\n            };\r\n        case DELETE_LIST:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.filter(wl => {\r\n                    if (wl.id !== action.listId) {\r\n                        return true\r\n                    } else {\r\n                        return false\r\n                    }\r\n                })\r\n            };\r\n        case UPDATE_LIST:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => {\r\n                    if (l.id === action.listId) {\r\n                        return {...l, ...action.payload}\r\n                    }\r\n                    return l\r\n                })\r\n            };\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => {\r\n                    if (l.id === action.listId) {\r\n                        return {\r\n                            ...l, tasks: [action.newTask, ...l.tasks]\r\n                        }\r\n                    } else {\r\n                        return l\r\n                    }\r\n                }),\r\n            };\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => {\r\n                    if (l.id === action.listId) {\r\n                        return {\r\n                            ...l, tasks: l.tasks.filter(w => {\r\n                                if (w.id !== action.taskId) {\r\n                                    return true\r\n                                }\r\n                                return false\r\n                            })\r\n                        }\r\n                    }\r\n                    return l\r\n                })\r\n            };\r\n        case UPDATE_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => {\r\n                        if (l.id === action.listId) {\r\n                            return {\r\n                                ...l, tasks: l.tasks.map(w => {\r\n                                    if (w.id === action.taskId) {\r\n                                        return {...w, ...action.payload}\r\n                                    }\r\n                                    return w\r\n                                })\r\n                            }\r\n                        }\r\n                        return l\r\n                    }\r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default listsReducer\r\n\r\nexport const setLists = lists => ({type: SET_LISTS, lists})\r\nexport const setListsLimitation = isLimitation => ({type: SET_LISTS_LIMITATION, isLimitation})\r\nexport const setListsLoading = listsLoading => ({type: SET_LISTS_LOADING, listsLoading})\r\nexport const setErrorMessage = errorMessage => ({type: SET_ERROR_MESSAGE, errorMessage})\r\nexport const setTasks = (listId, tasks) => ({type: SET_TASKS, listId, tasks})\r\nexport const setLoadingTasks = (listId, taskLoading) => ({type: SET_LOADING_TASKS, listId, taskLoading})\r\n\r\n\r\nexport const addListSuccess = newList => ({type: ADD_LIST, newList})\r\nexport const deleteListSuccess = listId => ({type: DELETE_LIST, listId})\r\nexport const updateListSuccess = (listId, payload) => ({type: UPDATE_LIST, listId, payload})\r\nexport const addTaskSuccess = (newTask, listId) => ({type: ADD_TASK, newTask, listId})\r\nexport const deleteTaskSuccess = (listId, taskId) => ({type: DELETE_TASK, listId, taskId})\r\nexport const updateTaskSuccess = (listId, taskId, payload) => ({type: UPDATE_TASK, listId, taskId, payload})\r\n","// THUNK CREATOR:\r\nimport {listsAPI} from \"../../api/2-lists-api\"\r\nimport {\r\n    addListSuccess, addTaskSuccess,\r\n    deleteListSuccess, deleteTaskSuccess,\r\n    setErrorMessage,\r\n    setLists,\r\n    setListsLoading, setLoadingTasks,\r\n    setTasks,\r\n    updateListSuccess, updateTaskSuccess\r\n} from \"./ListsReducer\"\r\n\r\nexport const getLists = () => async (dispatch) => {\r\n    try {\r\n        dispatch(setListsLoading(true))\r\n        const data = await listsAPI.getLists()\r\n        dispatch(setLists(data));\r\n        dispatch(setListsLoading(false))\r\n    } catch (error) {\r\n        dispatch(setListsLoading(false))\r\n        dispatch(setErrorMessage(error.message))\r\n        console.log('error get Lists', error.message);\r\n    }\r\n}\r\n\r\nexport const addList = list => async dispatch => {\r\n    try {\r\n        dispatch(setListsLoading(true))\r\n        const data = await listsAPI.addList(list)\r\n        dispatch(addListSuccess(data));\r\n        dispatch(setListsLoading(false))\r\n    } catch (error) {\r\n        dispatch(setListsLoading(false))\r\n        dispatch(setErrorMessage(error.message))\r\n        console.log('error add List', error.message);\r\n    }\r\n}\r\n\r\nexport const deleteList = listId => async dispatch => {\r\n    try {\r\n        dispatch(setListsLoading(true))\r\n        const data = await listsAPI.deleteList(listId)\r\n        if (data.resultCode === 0) {\r\n            dispatch(deleteListSuccess(listId));\r\n            dispatch(setListsLoading(false))\r\n        } else {\r\n            dispatch(setListsLoading(false))\r\n            let message = data.messages.length > 0 ? data.messages[0] : 'Some error'\r\n            dispatch(setErrorMessage(message))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setListsLoading(false))\r\n        dispatch(setErrorMessage(error.message))\r\n        console.log('error delete List', error.message);\r\n    }\r\n}\r\n\r\nexport const updateList = (listId, payload) => async dispatch => {\r\n    try {\r\n        dispatch(setListsLoading(true))\r\n        const data = await listsAPI.updateTitleList(listId, payload)\r\n        if (data.resultCode === 0) {\r\n            dispatch(updateListSuccess(listId, payload));\r\n            dispatch(setListsLoading(false))\r\n        } else {\r\n            dispatch(setListsLoading(false))\r\n            let message = data.messages.length > 0 ? data.messages[0] : 'Some error'\r\n            dispatch(setErrorMessage(message))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setListsLoading(false))\r\n        dispatch(setErrorMessage(error.message))\r\n        console.log('error update List', error.message);\r\n    }\r\n}\r\n\r\nexport const getTasks = (listId) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoadingTasks(listId, true))\r\n        const data = await listsAPI.getTasks(listId)\r\n        dispatch(setTasks(listId, data));\r\n        dispatch(setLoadingTasks(listId, false))\r\n    } catch (error) {\r\n        dispatch(setLoadingTasks(listId, false))\r\n        dispatch(setErrorMessage(error.message))\r\n        console.log('error get Tasks', error.message);\r\n    }\r\n}\r\n\r\nexport const addTask = (newTask, listId) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoadingTasks(listId, true))\r\n        const data = await listsAPI.addTask(listId, newTask)\r\n        if (data.resultCode === 0) {\r\n            dispatch(addTaskSuccess(data.data.item, listId));\r\n            dispatch(setLoadingTasks(listId, false))\r\n        } else {\r\n            dispatch(setLoadingTasks(listId, false))\r\n            let message = data.messages.length > 0 ? data.messages[0] : 'Some error'\r\n            dispatch(setErrorMessage(message))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setLoadingTasks(listId, false))\r\n        dispatch(setErrorMessage(error.message))\r\n        console.log('error add Task', error.message);\r\n    }\r\n}\r\n\r\nexport const deleteTask = (listId, taskId) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoadingTasks(listId, true))\r\n        const data = await listsAPI.deleteTask(listId, taskId)\r\n        if (data.resultCode === 0) {\r\n            dispatch(deleteTaskSuccess(listId, taskId));\r\n            dispatch(setLoadingTasks(listId, false))\r\n        } else {\r\n            dispatch(setLoadingTasks(listId, false))\r\n            let message = data.messages.length > 0 ? data.messages[0] : 'Some error'\r\n            dispatch(setErrorMessage(message))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setLoadingTasks(listId, false))\r\n        dispatch(setErrorMessage(error.message))\r\n        console.log('error delete Task', error.message);\r\n    }\r\n}\r\n\r\nexport const updateTask = (listId, taskId, updatedTask) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoadingTasks(listId, true))\r\n        const data = await listsAPI.updateTask(listId, taskId, updatedTask)\r\n        if (data.resultCode === 0) {\r\n            dispatch(updateTaskSuccess(listId, taskId, updatedTask));\r\n            dispatch(setLoadingTasks(listId, false))\r\n        } else {\r\n            dispatch(setLoadingTasks(listId, false))\r\n            let message = data.messages.length > 0 ? data.messages[0] : 'Some error'\r\n            dispatch(setErrorMessage(message))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setLoadingTasks(listId, false))\r\n        dispatch(setErrorMessage(error.message))\r\n        console.log('error delete Task', error.message);\r\n    }\r\n}\r\n","import React, {useState} from \"react\"\r\nimport AddForm from \"../../../0-common/AddForm\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {validateItem} from \"../../../0-common/validateForm\"\r\nimport {Alert} from \"antd\"\r\nimport {addList} from \"../../../../bll/lists/Lists-thunks\"\r\n\r\nconst AddListsFormContainer = () => {\r\n\r\n    const [itemName, changeItemName] = useState('')\r\n    const [errorMessage, setError] = useState(null)\r\n    const {isListsLoading} = useSelector((state) => state.lists)\r\n    const dispatch = useDispatch()\r\n\r\n    const addFormCallbacks = {\r\n        addItem: () => {\r\n            if (validateItem(itemName)) {\r\n                setError(validateItem(itemName))\r\n            } else {\r\n                const newWishList = {\r\n                    title: itemName\r\n                };\r\n                dispatch(addList(newWishList))\r\n                changeItemName('')\r\n            }\r\n        },\r\n        onChangeItemName: (e) => {\r\n            setError(null)\r\n            changeItemName(e.currentTarget.value)\r\n        }\r\n    }\r\n\r\n    const onClose = () => {\r\n        setError(null)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {errorMessage && <Alert\r\n                message={null}\r\n                style={{width: '308px', margin: '8px'}}\r\n                description={errorMessage}\r\n                type=\"warning\"\r\n                closable\r\n                onClose={onClose}\r\n                showIcon\r\n            />}\r\n            <AddForm item={'list'} itemName={itemName} isLoading={isListsLoading} {...addFormCallbacks} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddListsFormContainer\r\n","import * as axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        'API-KEY': '7dc52db3-0d14-44ab-80ee-40d908279e0f'\r\n    },\r\n});\r\n\r\nexport const authAPI = {\r\n    async me() {\r\n        const response = await instance.get(`auth/me`)\r\n        return response.data\r\n    },\r\n    async login(email, password, rememberMe = false, captcha = null) {\r\n        return await instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    async logout() {\r\n        return await instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    async getCaptchaUrl() {\r\n        return await instance.get(`security/get-captcha-url`)\r\n    },\r\n};\r\n","const SET_USER_DATA = 'ListsAPP/AuthReducer/SET_USER_DATA';\r\nconst SET_AUTHENTICATION = 'ListsAPP/AuthReducer/SET_AUTHENTICATION';\r\nconst SET_LOADING = 'ListsAPP/AuthReducer/SET_LOADING';\r\nconst SET_ERROR = 'ListsAPP/AuthReducer/SET_ERROR';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'ListsAPP/AuthReducer/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    isAuth: false,\r\n    loading: false,\r\n    email: '',\r\n    errorMessage: ''\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case SET_AUTHENTICATION:\r\n            return {\r\n                ...state,\r\n                isAuth: action.authentication,\r\n            };\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n            };\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl,\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.errorMessage,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer\r\n\r\nexport const setAuthentication = authentication => ({type: SET_AUTHENTICATION, authentication})\r\nexport const setLoading = loading => ({type: SET_LOADING, loading})\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload: {userId, email, login, isAuth}\r\n});\r\nexport const setError = errorMessage => ({type: SET_ERROR, errorMessage})\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, captchaUrl});\r\n","import {authAPI, securityAPI} from \"../../api/1-auth-api\"\r\nimport {getCaptchaUrlSuccess, setAuthUserData, setError, setLoading} from \"./AuthReducer\"\r\n\r\n// THUNK CREATOR:\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        const data = await authAPI.me()\r\n        dispatch(setLoading(false))\r\n        if (data.resultCode === 0) {\r\n            let {id, email, login} = data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        } else {\r\n            let message = data.messages.length > 0 ? data.messages[0] : 'Some error'\r\n            dispatch(setError(message));\r\n        }\r\n    } catch (error) {\r\n        error.message &&\r\n        dispatch(setError(error.message))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        const response = await authAPI.login(email, password, rememberMe, captcha)\r\n        dispatch(setLoading(false))\r\n        if (response.data.resultCode === 0) {\r\n            // success\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl());\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n            dispatch(setError(message));\r\n        }\r\n    } catch (error) {\r\n        error.message &&\r\n        dispatch(setError(error.message))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        const response = await authAPI.logout()\r\n        dispatch(setLoading(false))\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n            dispatch(setError(message));\r\n        }\r\n    } catch (error) {\r\n        error.message &&\r\n        dispatch(setError(error.message))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        const response = await securityAPI.getCaptchaUrl()\r\n        dispatch(setLoading(false))\r\n        const captchUrl = response.data.url\r\n        dispatch(getCaptchaUrlSuccess(captchUrl));\r\n    } catch (error) {\r\n        console.error(error.response.message);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AddFormContainer from \"./addListsForm/AddListsFormContainer\"\r\nimport {Avatar, Button, PageHeader} from \"antd\"\r\nimport styles from './Header.module.css'\r\nimport {useDispatch} from \"react-redux\"\r\nimport {logout} from \"../../../bll/auth/Auth-thunks\"\r\n\r\nconst HeaderPage = ({isAuth, loading, email, isListsLimit}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onLogOut = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    const stylesAnt = {\r\n        borderBottom: 'white 1px solid',\r\n        padding: '24px 24px 4px 24px',\r\n        background: '#fafafa',\r\n    }\r\n\r\n    let config;\r\n    if (isAuth && !isListsLimit) {\r\n        config = {\r\n            extra: [<AddFormContainer/>]\r\n        }\r\n    } else if (isListsLimit) {\r\n        config = {\r\n            extra: [<div> Max quantity Lists is equals 10. </div>]\r\n        }\r\n    } else {\r\n        config = {\r\n            extra: [null]\r\n        }\r\n    }\r\n\r\n    return (<>\r\n            <PageHeader style={stylesAnt}\r\n                        title={'My to do lists'}\r\n                        subTitle={'What are you wanna to do?'}\r\n                        {...config}>\r\n                {isAuth\r\n                    ? <figure className={styles.avatar}>\r\n                        <Avatar size={30} icon=\"user\"/>\r\n                        <figurecaption className={styles.caption}>{email}</figurecaption>\r\n                        <Button\r\n                            className={styles.button}\r\n                            type=\"primary\"\r\n                            icon=\"user\"\r\n                            loading={loading}\r\n                            onClick={onLogOut}>\r\n                            Log out\r\n                        </Button>\r\n                    </figure>\r\n                    : null}\r\n            </PageHeader>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeaderPage\r\n","import {Alert, Icon, Input} from \"antd\"\r\nimport React, {useState} from \"react\"\r\nimport {validateItem} from \"./validateForm\"\r\nimport styles from \"../1-main/3-listsContent/wishesList/listWrapper.module.css\"\r\n\r\nconst InputForm = ({itemTitle, changeItemTitle, addItem, undo}) => {\r\n\r\n    const [errorMessage, setError] = useState(null)\r\n\r\n    const onAddItem = () => {\r\n        if (validateItem(itemTitle)) {\r\n            setError(validateItem(itemTitle))\r\n        } else {\r\n            addItem(itemTitle)\r\n        }\r\n    }\r\n\r\n    const onClose = () => setError(null)\r\n\r\n    const onUndo = () => {\r\n        setError(null)\r\n        undo()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span className={styles.inputContainer}>\r\n            {errorMessage &&\r\n            <Alert\r\n                message={null}\r\n                style={{width: 'calc(100% - 30px)', margin: '0 45px 10px 15px', color: '#000'}}\r\n                description={errorMessage}\r\n                type=\"warning\"\r\n                closable\r\n                onClose={onClose}\r\n                showIcon\r\n            />\r\n            }\r\n                <Input placeholder=\"List name\" value={itemTitle}\r\n                       autoFocus\r\n                       onChange={(e) => {\r\n                           setError(null)\r\n                           changeItemTitle(e.currentTarget.value)\r\n                       }}\r\n                       onPressEnter={onAddItem}\r\n                />\r\n            </span>\r\n            <Icon type=\"check-circle\" className={styles.icon} onClick={onAddItem}/>\r\n            <Icon type=\"undo\" className={styles.icon} onClick={onUndo}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputForm\r\n","import React, {useEffect, useState} from \"react\"\r\nimport {Checkbox, Icon, Popconfirm, Select} from 'antd'\r\nimport styles from './Task.module.css'\r\nimport {useDispatch} from \"react-redux\"\r\nimport InputForm from \"../../../../0-common/InputForm\"\r\nimport {deleteTask, updateTask} from \"../../../../../bll/lists/Lists-thunks\"\r\n\r\nconst Task = ({taskItem, listId}) => {\r\n\r\n    const [isChangeModeShow, setChangeModeShow] = useState(false)\r\n    const [taskTitle, changeTaskTitle] = useState(taskItem.title)\r\n    const {Option} = Select;\r\n\r\n    const text = 'Are you sure to delete this task?'\r\n\r\n    useEffect(() => {\r\n        changeTaskTitle(taskItem.title)\r\n    }, [taskItem.title])\r\n\r\n//redux\r\n    const dispatch = useDispatch();\r\n\r\n    const onDeleteTask = () => dispatch(deleteTask(listId, taskItem.id))\r\n\r\n    const onPriorityChange = (value) => {\r\n        dispatch(updateTask(listId, taskItem.id, {...taskItem, priority: value}))\r\n        console.log(`priority selected ${value} - id ${taskItem.id}`);\r\n    }\r\n    const onUpdateTask = (taskTitle) => {\r\n        dispatch(updateTask(listId, taskItem.id, {...taskItem, title: taskTitle}))\r\n        setChangeModeShow(false)\r\n    }\r\n    const onChangeTaskCompleted = (e) => {\r\n        dispatch(updateTask(listId, taskItem.id, {...taskItem, status: (e.target.checked)}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span className={styles.listContainer}>\r\n                               {isChangeModeShow ? <>\r\n                                       <InputForm itemTitle={taskTitle} changeItemTitle={changeTaskTitle}\r\n                                                  addItem={onUpdateTask}\r\n                                                  undo={() => setChangeModeShow(false)}/>\r\n                                   </>\r\n                                   : <>\r\n                                       <Checkbox className={styles.check} checked={taskItem.status}\r\n                                                 onChange={(e) => onChangeTaskCompleted(e)}> </Checkbox>\r\n                                       <article className={styles.text}>\r\n                                           {taskItem.title}\r\n                                       </article>\r\n                                       <Select defaultValue={taskItem.priority} style={{width: 120}}\r\n                                               className={styles.priority}\r\n                                               onChange={(value) => onPriorityChange(value)}>\r\n                                           <Option value={2}>High</Option>\r\n                                           <Option value={1}>Medium</Option>\r\n                                           <Option value={0}>Low</Option>\r\n                                       </Select>\r\n                                       <Icon type=\"edit\" className={styles.icon}\r\n                                             onClick={() => setChangeModeShow(true)}/>\r\n                                       <Popconfirm placement=\"right\" title={text} onConfirm={onDeleteTask} okText=\"Yes\"\r\n                                                   cancelText=\"No\">\r\n                                           <Icon type=\"delete\" className={styles.icon}/>\r\n                                       </Popconfirm>\r\n                                   </>\r\n                               }\r\n                </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React, {useState} from \"react\"\r\nimport AddForm from \"../../../../0-common/AddForm\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport styles from './AddListForm.module.css'\r\nimport {Alert} from \"antd\"\r\nimport {validateItem} from \"../../../../0-common/validateForm\"\r\nimport {addTask} from \"../../../../../bll/lists/Lists-thunks\"\r\n\r\nconst AddListForm = (props) => {\r\n    const [errorMessage, setError] = useState(null)\r\n    const [taskTitle, changeTaskTitle] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addFormCallbacks = {\r\n        addItem: () => {\r\n            if (validateItem(taskTitle)) {\r\n                setError(validateItem(taskTitle))\r\n            } else {\r\n                const newTask = {\r\n                    title: taskTitle,\r\n                    priority: 2,\r\n                };\r\n                dispatch(addTask(newTask, props.listId));\r\n                changeTaskTitle('')\r\n            }\r\n        },\r\n        onChangeItemName: (e) => {\r\n            setError(null)\r\n            changeTaskTitle(e.currentTarget.value)\r\n        }\r\n    }\r\n\r\n    const onClose = () => {\r\n        setError(null)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {errorMessage && <Alert\r\n                message={null}\r\n                className={styles.alertMessage}\r\n                description={errorMessage}\r\n                type=\"warning\"\r\n                closable\r\n                onClose={onClose}\r\n                showIcon\r\n            />\r\n            }\r\n            <div className={styles.listHeader}>\r\n                <AddForm item={'task'} itemName={taskTitle} {...addFormCallbacks} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddListForm\r\n","import React, {useState} from 'react';\r\nimport {Button, Icon, Typography} from \"antd\"\r\nimport styles from './listFooter.module.css'\r\n\r\nconst ListFooter = ({filterValue, changeFilter}) => {\r\n\r\n    const [isHidden, hide] = useState(false)\r\n\r\n    const onAllFilterClick = () => {\r\n        changeFilter(\"All\")\r\n    }\r\n    const onCompletedFilterClick = () => {\r\n        changeFilter(\"Completed\")\r\n    }\r\n    const onActiveFilterClick = () => {\r\n        changeFilter(\"Active\")\r\n    }\r\n\r\n    const onShowFiltersClick = () => {\r\n        hide(true)\r\n    }\r\n    const onHideFiltersClick = () => {\r\n        hide(false)\r\n    }\r\n\r\n\r\n    let typeForAll = filterValue === \"All\" ? \"primary\" : \"\";\r\n    let typeForCompleted = filterValue === \"Completed\" ? \"primary\" : \"\";\r\n    let typeForActive = filterValue === \"Active\" ? \"primary\" : \"\";\r\n\r\n    return (\r\n        <div className={styles.listFooter}>\r\n            {!isHidden && <div>\r\n                <Button key=\"11\" onClick={onAllFilterClick} type={typeForAll}>ALL</Button>\r\n                <Button key=\"12\" onClick={onCompletedFilterClick} type={typeForCompleted}>Completed</Button>\r\n                <Button key=\"13\" onClick={onActiveFilterClick} type={typeForActive}>Active</Button>\r\n            </div>\r\n            }\r\n            {!isHidden && <span onClick={onShowFiltersClick}>\r\n                    <Icon type=\"backward\"/>\r\n                    <Typography code>hide</Typography>\r\n                </span>}\r\n            {isHidden && <span onClick={onHideFiltersClick}> <Icon type=\"forward\"/>\r\n                    <Typography code>show</Typography> </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListFooter\r\n","import React, {useEffect, useState} from \"react\"\r\nimport styles from \"../listWrapper.module.css\"\r\nimport InputForm from \"../../../../0-common/InputForm\"\r\nimport {Icon, Popconfirm} from \"antd\"\r\n\r\n\r\nconst ListHeader = ({isInputShow, setInputShow, onUpdateList, onDeleteList, l}) => {\r\n\r\n\r\n    const [listTitle, changeListTitle] = useState(l.title)\r\n\r\n    useEffect(() => {\r\n        changeListTitle(l.title)\r\n    }, [l.title])\r\n\r\n    const confirmText = 'Are you sure to delete this list?'\r\n\r\n    return (\r\n        <header className={styles.titleWrap}>\r\n            {isInputShow ? <>\r\n                    <InputForm itemTitle={listTitle} changeItemTitle={changeListTitle} addItem={onUpdateList}\r\n                               undo={() => {\r\n                                   setInputShow(false)\r\n                               }}/>\r\n                </>\r\n                : <>\r\n                    <h3 className={styles.title} style={{}}>{`${l.title}`}</h3>\r\n                    <Icon type=\"edit\" className={styles.icon} onClick={() => setInputShow(true)}/>\r\n                    <Popconfirm placement=\"right\" title={confirmText} onConfirm={onDeleteList} okText=\"Yes\"\r\n                                cancelText=\"No\">\r\n                        <Icon type=\"delete\" className={styles.icon}/>\r\n                    </Popconfirm>\r\n                </>\r\n            }\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default ListHeader\r\n","import {Icon, List} from \"antd\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport Task from \"./2-ListContent/Task\"\r\nimport AddListForm from \"./1-AddListForm/AddListForm\"\r\nimport ListFooter from \"./3-ListFooter/ListFooter\"\r\nimport ListHeader from \"./0-ListHeader/ListHeader\"\r\nimport styles from './listWrapper.module.css'\r\nimport {useDispatch} from \"react-redux\"\r\nimport {deleteList, getTasks, updateList} from \"../../../../bll/lists/Lists-thunks\"\r\n\r\nconst ListWrapper = ({l, ...props}) => {\r\n\r\n    const [isInputShow, setInputShow] = useState(false)\r\n    const [filterValue, changeFilter] = useState(\"All\")\r\n    const isListContentLoading = l.taskLoading\r\n\r\n    const onChangeFilter = (filter) => changeFilter(filter)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getTasks(l.id))\r\n    }, [dispatch, l.id])\r\n\r\n    const tasks = l.tasks && l.tasks\r\n        .filter(t => {\r\n            switch (filterValue) {\r\n                case \"All\":\r\n                    return true;\r\n                case \"Active\":\r\n                    return !t.status;\r\n                case \"Completed\":\r\n                    return t.status;\r\n                default:\r\n                    return true\r\n            }\r\n        })\r\n\r\n    const onDeleteList = () => dispatch(deleteList(l.id))\r\n\r\n    const onUpdateList = (itemTitle) => {\r\n        console.log(l.id)\r\n        dispatch(updateList(l.id, {title: itemTitle}))\r\n        setInputShow(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.container}>\r\n                {isListContentLoading ? <Icon type=\"loading\" style={{fontSize: '30px', margin: '50px 0'}}/>\r\n                    : <> <ListHeader isInputShow={isInputShow} setInputShow={setInputShow}\r\n                                     onUpdateList={onUpdateList} onDeleteList={onDeleteList} l={l}/>\r\n                        <List style={{background: '#d9d9d9'}}\r\n                              header={<AddListForm listId={l.id}/>}\r\n                              footer={<ListFooter filterValue={filterValue} changeFilter={onChangeFilter}/>}\r\n                              bordered\r\n                              dataSource={tasks}\r\n                              renderItem={item => (\r\n                                  <List.Item>\r\n                                      <Task listId={l.id} taskItem={item}/>\r\n                                  </List.Item>)}/>\r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListWrapper\r\n","import React, {useEffect} from \"react\"\r\nimport ListWrapper from \"./wishesList/ListWrapper\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {getLists} from \"../../../bll/lists/Lists-thunks\"\r\nimport {Icon, Modal} from \"antd\"\r\nimport styles from './ListsContainer.module.css'\r\nimport {setErrorMessage, setListsLimitation} from \"../../../bll/lists/ListsReducer\"\r\n\r\nconst ListsContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getLists())\r\n    }, [dispatch])\r\n\r\n\r\n    const {isListsLoading, isListsLimit, errorMessage, lists} = useSelector((store) => store.lists)\r\n\r\n    switch (lists.length) {\r\n        case 10 : !isListsLimit && dispatch(setListsLimitation(true)); break\r\n        case 9 :  isListsLimit && dispatch(setListsLimitation(false)); break\r\n        default: break\r\n    }\r\n\r\n    const listsArr = lists.map((l) => {\r\n        if (l) {\r\n            return <ListWrapper key={l.id} l={l}/>\r\n        }\r\n        return null\r\n    })\r\n\r\n    if (errorMessage) {\r\n        Modal.error({\r\n            title: 'This is an error message',\r\n            content: errorMessage,\r\n        });\r\n        dispatch(setErrorMessage(''))\r\n    }\r\n\r\n    return (<>\r\n            {isListsLoading\r\n                ? <Icon type=\"loading\" style={{fontSize: '50px'}}/>\r\n                : <div className={styles.listsWrap}>\r\n                    {listsArr}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListsContainer\r\n","import React, {Component} from \"react\";\r\nimport {Button, Checkbox, Form, Icon, Input, Modal} from \"antd\"\r\nimport styles from './Login.module.css'\r\nimport {login} from \"../../../bll/auth/Auth-thunks\"\r\nimport {connect} from \"react-redux\"\r\nimport {compose} from \"redux\"\r\nimport {setError} from \"../../../bll/auth/AuthReducer\"\r\n\r\nclass LoginPage extends Component {\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                this.props.login(values.email, values.password, values.rememberMe)\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        let {errorMessage} = this.props;\r\n\r\n        if (errorMessage) {\r\n            Modal.error({\r\n                title: 'This is an error message',\r\n                content: errorMessage,\r\n            });\r\n            this.props.setError('')\r\n        }\r\n\r\n        const {getFieldDecorator} = this.props.form;\r\n        return (<div className={styles.loginForm}>\r\n                <div className={styles.title}>\r\n                    Log In\r\n                </div>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Item className={styles.formItem}>\r\n                        {getFieldDecorator('email', {\r\n                            rules: [{\r\n                                required: true,\r\n                                message: 'Please input your email!'\r\n                            }, {\r\n                                pattern: /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i,\r\n                                message: 'Please input correct email!'\r\n                            }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"mail\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                placeholder=\"Email\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item className={styles.formItem}>\r\n                        {getFieldDecorator('password', {\r\n                            rules: [{required: true, message: 'Please input your Password!'}],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item className={styles.formItem}>\r\n                        {getFieldDecorator('remember', {\r\n                            valuePropName: 'checked',\r\n                            initialValue: true,\r\n                        })(<Checkbox>Remember me</Checkbox>)}\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Log in\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst WrappedNormalLoginForm = compose(\r\n    Form.create({name: 'normal_login'}),\r\n    connect(null, {login, setError})\r\n)(LoginPage);\r\n\r\nexport default WrappedNormalLoginForm\r\n","import React, {useEffect} from \"react\";\r\nimport HeaderPage from \"./1-header/HeaderPage\"\r\nimport {Icon, Layout,} from \"antd\"\r\nimport ListsContainer from \"./3-listsContent/ListsContainer\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport LoginPage from \"./2-log-in/LoginPage\"\r\nimport {getAuthUserData} from \"../../bll/auth/Auth-thunks\"\r\n\r\nconst Main = () => {\r\n\r\n    const {Footer} = Layout;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getAuthUserData())\r\n    }, [dispatch])\r\n\r\n    const {isAuth, loading, email, errorMessage} = useSelector(store => store.auth)\r\n    const {isLoading, isListsLimit} = useSelector(store => store.lists)\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{background: '#fafafa', minHeight: '100vh'}}>\r\n                <HeaderPage isAuth={isAuth} loading={loading} email={email} isListsLimit={isListsLimit} isLoading={isLoading}/>\r\n                {!loading && isAuth && <ListsContainer/>}\r\n                {!loading && !isAuth && <LoginPage errorMessage={errorMessage}/>}\r\n                {loading && <Icon type=\"loading\" style={{fontSize: '50px'}}/>}\r\n                <Footer style={{background: '#fafafa', marginTop: '10px'}}/>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport ThunkMiddleware from 'redux-thunk'\r\nimport listsReducer from \"./lists/ListsReducer\";\r\nimport authReducer from \"./auth/AuthReducer\"\r\n\r\nlet reducers = combineReducers({\r\n    lists: listsReducer,\r\n    auth: authReducer,\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(ThunkMiddleware)));\r\nexport default store;\r\n","import React from 'react';\nimport './App.css';\nimport Main from \"./ui/1-main/Main\"\nimport store from \"./bll/store\"\nimport {Provider} from \"react-redux\"\n\nconst App = () => (\n    <Provider store={store}>\n        <div className=\"App\">\n            <Main/>\n        </div>\n    </Provider>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"Task_listContainer__GpMGW\",\"inputContainer\":\"Task_inputContainer__2fMwD\",\"check\":\"Task_check__2IIVS\",\"text\":\"Task_text__2HdCO\",\"priority\":\"Task_priority__2p0rc\",\"icon\":\"Task_icon__eA1mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__dK-AK\",\"title\":\"Login_title__1adGx\",\"formItem\":\"Login_formItem__9QqFW\"};"],"sourceRoot":""}